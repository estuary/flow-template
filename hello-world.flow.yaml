collections:
  acmeCo/greetings:
    schema:
      properties:
        count:
          type: integer
        message:
          type: string
      required:
        - count
        - message
      type: object
    key: [/count]

captures:
  acmeCo/source-hello-world:
    endpoint:
      airbyteSource:
        image: ghcr.io/estuary/source-hello-world:8406f63-dirty
        config:
          # Number of greeting documents to produce when running in non-tailing mode
          # [integer] (required)
          greetings: 100
    bindings:
      - resource:
          stream: greetings
          syncMode: incremental
        target: acmeCo/greetings

materializations:
  acmeCo/database:
    endpoint:
      sqlite:
        path: acmeCo.db
    bindings:
      - resource:
          table: greetings
        source: acmeCo/greetings

tests:
  "Add some greetings":
    - ingest:
        collection: acmeCo/greetings
        documents:
          - { count: 1, message: Hello }
          - { count: 2, message: Hello }
    - verify:
        collection: acmeCo/greetings
        documents:
          - { count: 1, message: Hello }
          - { count: 2, message: Hello }

    # Second ingestion inserts and replaces greetings.
    - ingest:
        collection: acmeCo/greetings
        documents:
          - { count: 2, message: Goodbye }
          - { count: 3, message: Hi }
    - verify:
        collection: acmeCo/greetings
        documents:
          - { count: 1, message: Hello }
          - { count: 2, message: Goodbye }
          - { count: 3, message: Hi }

# journalRules control how Flow collections map into Gazette journals.
# Here, we persist to the local filesystem as a stand-in for cloud storage.
journalRules:
  00_fragment_store:
    template:
      fragment:
        compression_codec: GZIP
        stores: [file:///]
        flush_interval: 5m
